{"version":3,"sources":["components/Navbar.js","components/InfoSection.js","components/Input.js","components/InfoForm.js","components/SchoolSection.js","components/SchoolForm.js","components/WorkSection.js","components/WorkForm.js","App.js","index.js"],"names":["Navbar","className","href","icon","faGithub","InfoSection","props","name","email","phone","Input","label","type","onChange","value","options","htmlFor","id","placeholder","e","min","max","step","rows","columns","InfoForm","handleSubmit","handleChange","onSubmit","SchoolSection","school","degree","gpa","gradDate","handleEdit","handleDelete","date","dateArr","split","Date","toDateString","slice","prettyDate","faPencilAlt","onClick","faTrash","SchoolForm","handleCancel","WorkSection","company","title","details","startDate","endDate","WorkForm","App","useState","setName","setEmail","setPhone","infoSubmitted","setInfoSubmitted","setSchool","setDegree","setGpa","setGradDate","schoolArray","setSchoolArray","currentSchool","setCurrentSchool","emptySchool","uniqid","submitted","setCompany","setTitle","setDetails","setStartDate","setEndDate","workArray","setWorkArray","currentWork","setCurrentWork","emptyWork","newValue","target","console","log","submitInfo","preventDefault","addSchool","submitSchool","schoolEntry","idx","indexOf","newArray","removeSchool","index","prevArr","filter","item","addWork","submitWork","workEntry","removeWork","work","schoolSection","map","cancelSchool","editSchool","workSection","faPlusCircle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.533837ae.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/Navbar.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst Navbar = () => {\n\n  return (\n    <nav className=\"Navbar\">\n      <h1>CV Builder</h1>\n      <a href=\"https://github.com/ubercj\" className=\"github\"><FontAwesomeIcon icon={faGithub} /></a>\n    </nav>\n  )\n}\n\nexport default Navbar;","import '../styles/Section.css'\nimport '../styles/Card.css'\n\nconst InfoSection = (props) => {\n  const { name, email, phone } = props;\n\n  return (\n    <div className=\"Card\">\n      <p><span>Name:</span> {name}</p>\n      <p><span>Email:</span> {email}</p>\n      <p><span>Phone:</span> {phone}</p>\n    </div>\n  )\n}\n\nexport default InfoSection;","import React from 'react'\nimport '../styles/Input.css'\n\nconst Input = (props) => {\n  const { name, label, type, onChange, value, options } = props;\n\n  const renderWithOptions = () => {\n    if (type === 'number') {\n      return (\n        <input\n          id={name}\n          type={type}\n          className=\"Input\"\n          value={value}\n          placeholder='4.0 is the max'\n          onChange={(e) => onChange(e, name)}\n          min={options[0]}\n          max={options[1]}\n          step={options[2]}\n        />\n      )\n    } else if (type === 'textarea') {\n      return (\n        <textarea \n          id={name}\n          type={type}\n          className=\"Input\"\n          value={value}\n          onChange={(e) => onChange(e, name)}\n          rows={5}\n          columns={5}\n        />\n      )\n    } else {\n        return (\n          <input\n            id={name}\n            type={type}\n            className=\"Input\"\n            value={value}\n            onChange={(e) => onChange(e, name)}\n          />\n        )\n      }\n  }\n\n  return (\n    <label htmlFor={name}>\n      {label}\n      {renderWithOptions()}\n    </label>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport Input from './Input';\n\nconst InfoForm =  (props) => {\n  const { handleSubmit, handleChange, name, email, phone } = props;\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <Input name='name' label='Name: ' type='text'\n      onChange={handleChange} value={name}/>\n      <Input name='email' label='Email: ' type='email'\n      onChange={handleChange} value={email}/>\n      <Input name='phone' label='Phone: ' type='tel'\n      onChange={handleChange} value={phone}/>\n      <button type='submit' className='submit'>Submit</button>\n    </form>\n  )\n}\n\nexport default InfoForm;","import React from 'react'\nimport '../styles/Card.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst SchoolSection =  (props) => {\n  const { school, degree, gpa, gradDate, handleEdit, handleDelete } = props;\n\n  const prettyDate = (date) => {\n    if (date) {\n      let dateArr = date.split('-');\n      let uglyDate = new Date(dateArr[0], dateArr[1], dateArr[2]);\n      return uglyDate.toDateString().slice(3);\n    }\n  }\n\n  return (\n    <div className=\"Card\">\n      <p><span>School:</span> {school}</p>\n      <p><span>Degree:</span> {degree}</p>\n      <p><span>GPA:</span> {gpa}</p>\n      <p><span>Graduation date:</span> {prettyDate(gradDate)}</p>\n      <div>\n        <FontAwesomeIcon icon={faPencilAlt} className='icon'\n        onClick={handleEdit} />\n        <FontAwesomeIcon icon={faTrash} className='icon'\n        onClick={handleDelete} />\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolSection;","import React from 'react';\nimport Input from './Input';\n\nconst SchoolForm =  (props) => {\n  const { handleSubmit, handleChange, school, degree,\n    gpa, gradDate, handleCancel} = props;\n\n  const gpaConstraints = ['0', '4.0', '.1']\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <Input name='school' label='School: ' type='text'\n      onChange={handleChange} value={school}/>\n      <Input name='degree' label='Degree: ' type='text'\n      onChange={handleChange} value={degree}/>\n      <Input name='gpa' label='GPA: ' type='number'\n      onChange={handleChange} value={gpa} options={gpaConstraints}/>\n      <Input name='gradDate' label='Graduation date: ' type='date'\n      onChange={handleChange} value={gradDate}/>\n      <div className='buttons'>\n        <button type='submit' className='submit'>Submit</button>\n        <button onClick={handleCancel} className='cancel'>Cancel</button>\n      </div>\n    </form>\n  )\n}\n\nexport default SchoolForm;","import React from 'react'\nimport '../styles/Card.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst WorkSection = (props) => {\n  const { company, title, details, startDate, endDate,\n    handleEdit, handleDelete } = props;\n\n  const prettyDate = (date) => {\n    if (date) {\n      let dateArr = date.split('-');\n      let uglyDate = new Date(dateArr[0], dateArr[1], dateArr[2]);\n      return uglyDate.toDateString().slice(3);\n    }\n  }\n\n  return (\n    <div className=\"Card\">\n      <p><span>Company:</span> {company}</p>\n      <p><span>Title:</span> {title}</p>\n      <p><span>Job Details:</span> {details}</p>\n      <p><span>Start Date:</span> {prettyDate(startDate)}</p>\n      <p><span>End Date:</span> {prettyDate(endDate)}</p>\n      <div>\n        <FontAwesomeIcon icon={faPencilAlt} className='icon'\n        onClick={handleEdit} />\n        <FontAwesomeIcon icon={faTrash} className='icon'\n        onClick={handleDelete} />\n      </div>\n    </div>\n  )\n}\n\nexport default WorkSection;","import React from 'react';\nimport Input from './Input';\n\nconst WorkForm =  (props) => {\n  const { handleSubmit, handleChange, company, title,\n    details, startDate, endDate, handleCancel } = props;\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n        <Input name='company' label='Company: ' type='text'\n        onChange={handleChange} value={company}/>\n        <Input name='title' label='Title: ' type='text'\n        onChange={handleChange} value={title}/>\n        <Input name='details' label='Job Details: ' type='textarea'\n        onChange={handleChange} value={details}/>\n        <Input name='startDate' label='Start Date: ' type='date'\n        onChange={handleChange} value={startDate}/>\n        <Input name='endDate' label='End Date: ' type='date'\n        onChange={handleChange} value={endDate}/>\n        <div className='buttons'>\n          <button type='submit' className='submit'>Submit</button>\n          <button onClick={handleCancel} className='cancel'>Cancel</button>\n        </div>\n      </form>\n  )\n}\n\nexport default WorkForm;","import React, { useState } from 'react'\nimport uniqid from 'uniqid'\n\nimport Navbar from './components/Navbar'\nimport InfoSection from './components/InfoSection'\nimport InfoForm from './components/InfoForm'\nimport SchoolSection from './components/SchoolSection'\nimport SchoolForm from './components/SchoolForm'\nimport WorkSection from './components/WorkSection'\nimport WorkForm from './components/WorkForm'\n\nimport './styles/App.css'\nimport './styles/Form.css'\nimport './styles/Section.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst App = () => {\n  /*===================\n  State\n  ====================*/\n\n  // Info section\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const [infoSubmitted, setInfoSubmitted] = useState(false);\n\n  // School section\n  const [school, setSchool] = useState('');\n  const [degree, setDegree] = useState('');\n  const [gpa, setGpa] = useState('');\n  const [gradDate, setGradDate] = useState('');\n\n  const [schoolArray, setSchoolArray] = useState([]);\n  const [currentSchool, setCurrentSchool] = useState('')\n  const emptySchool = {\n    school: '',\n    degree: '',\n    gpa: '',\n    gradDate: '',\n    id: uniqid(),\n    submitted: false\n  }\n\n  // Work section\n  const [company, setCompany] = useState('');\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const [workArray, setWorkArray] = useState([]);\n  const [currentWork, setCurrentWork] = useState('')\n  const emptyWork = {\n    company: '',\n    title: '',\n    details: '',\n    startDate: '',\n    endDate: '',\n    id: uniqid(),\n    submitted: false\n  }\n\n  /*===================\n  Functions\n  ====================*/\n\n  const handleChange = (e, name) => {\n    let newValue = e.target.value;\n    switch (name) {\n      case 'name':\n        setName(newValue);\n        break;\n      case 'email':\n        setEmail(newValue);\n        break;\n      case 'phone':\n        setPhone(newValue);\n        break;\n      case 'school':\n        setSchool(newValue);\n        break;\n      case 'degree':\n        setDegree(newValue);\n        break;\n      case 'gpa':\n        setGpa(newValue);\n        break;\n      case 'gradDate':\n        setGradDate(newValue);\n        break;\n      case 'company':\n        setCompany(newValue);\n        break;\n      case 'title':\n        setTitle(newValue);\n        break;\n      case 'details':\n        setDetails(newValue);\n        break;\n      case 'startDate':\n        setStartDate(newValue);\n        break;\n      case 'endDate':\n        setEndDate(newValue);\n        break;\n      default:\n        console.log('Whoops, something is breaking');\n        break;\n    }\n  }\n\n  const submitInfo = (e) => {\n    e.preventDefault();\n    setInfoSubmitted(true);\n  }\n\n  // Education Logic\n\n  const addSchool = () => {\n    setCurrentSchool(emptySchool);\n    setSchool('');\n    setDegree('');\n    setGpa('');\n    setGradDate('');\n    setSchoolArray([...schoolArray, emptySchool]);\n  }\n\n  const submitSchool = (e) => {\n    e.preventDefault();\n\n    const schoolEntry = {\n      school: school,\n      degree: degree,\n      gpa: gpa,\n      gradDate: gradDate,\n      id: currentSchool.id,\n      submitted: true\n    }\n\n    const idx = schoolArray.indexOf(currentSchool);\n    const newArray = [...schoolArray];\n    newArray[idx] = schoolEntry;\n    setSchoolArray(newArray);\n    \n    setCurrentSchool('');\n    setSchool('');\n    setDegree('');\n    setGpa('');\n    setGradDate('');\n  }\n\n  const editSchool = (school) => {\n    setCurrentSchool(school);\n    setSchool(school.school);\n    setDegree(school.degree);\n    setGpa(school.gpa);\n    setGradDate(school.gradDate);\n  }\n\n  const removeSchool = (school) => {\n    let index = schoolArray.indexOf(school);\n    setSchoolArray((prevArr) => {\n      return prevArr.filter((item, idx) => idx !== index)\n    })\n  }\n\n  const cancelSchool = (school) => {\n\n    if (school.submitted) {\n      setCurrentSchool('');\n      setSchool('');\n      setDegree('');\n      setGpa('');\n      setGradDate('');\n    } else {\n      removeSchool(school);\n    }\n  }\n\n  // Work Logic\n\n  const addWork = () => {\n    setCurrentWork(emptyWork);\n    setCompany('');\n    setTitle('');\n    setDetails('');\n    setStartDate('');\n    setEndDate('');\n    setWorkArray([...workArray, emptyWork]);\n  }\n\n  const submitWork = (e) => {\n    e.preventDefault();\n\n    const workEntry = {\n      company: company,\n      title: title,\n      details: details,\n      startDate: startDate,\n      endDate: endDate,\n      id: currentWork.id,\n      submitted: true\n    }\n\n    const idx = workArray.indexOf(currentWork);\n    const newArray = [...workArray];\n    newArray[idx] = workEntry;\n    setWorkArray(newArray);\n    \n    setCurrentWork('');\n    setCompany('');\n    setTitle('');\n    setDetails('');\n    setStartDate('');\n    setEndDate('');\n  }\n\n  const editWork = (work) => {\n    setCurrentWork(work);\n    setCompany(work.company);\n    setTitle(work.title);\n    setDetails(work.details);\n    setStartDate(work.startDate);\n    setEndDate(work.endDate);\n  }\n\n  const removeWork = (work) => {\n    let index = workArray.indexOf(work);\n    setWorkArray((prevArr) => {\n      return prevArr.filter((item, idx) => idx !== index)\n    })\n  }\n\n  const cancelWork = (work) => {\n    if (work.submitted) {\n      setCurrentWork('');\n      setCompany('');\n      setTitle('');\n      setDetails('');\n      setStartDate('');\n      setEndDate('');\n    } else {\n      removeWork(work);\n    }\n  }\n\n  /*===================\n  Rendering Components\n  ====================*/\n  const renderInfoForm = () => {\n    if (infoSubmitted) {\n      return ( \n        <section className=\"Section\">\n          <header>\n            <h2>Contact Information</h2>\n            <FontAwesomeIcon icon={faPencilAlt} className='icon'\n            onClick={() => setInfoSubmitted(false)} />\n          </header>\n          <InfoSection\n            name={name} email={email} phone={phone}\n          />\n        </section>\n      );\n    } else {\n      return (\n        <section className=\"Section\">\n          <h2>Contact Information</h2>\n          <InfoForm\n            handleSubmit={submitInfo} handleChange={handleChange}\n            name={name} email={email} phone={phone}\n          />\n        </section>\n      );\n    }\n  }\n\n  const schoolSection = (\n    schoolArray.map((item) => {\n      if (item === currentSchool) {\n        return (\n          // There can only be one form at a time, but I set a key here to avoid the annoying error in the console\n          <SchoolForm key={'schoolForm'}\n          handleSubmit={submitSchool} handleChange={handleChange}\n          school={school} degree={degree} gpa={gpa} gradDate={gradDate}\n          handleCancel={() => cancelSchool(item)}\n          />\n        )\n      } else {\n      return (\n        <div key={item.id} id={item.id}>\n          <SchoolSection school={item.school} degree={item.degree} gpa={item.gpa} gradDate={item.gradDate} handleEdit={() => editSchool(item)}\n          handleDelete={() => removeSchool(item)}/>\n        </div>\n      )\n      }\n    })\n  )\n\n  const renderSchoolForm = () => {\n    return (\n      <section className=\"Section\">\n        <h2>Education</h2>\n        {schoolSection}\n        <button onClick={addSchool}>\n          Add Education\n          <FontAwesomeIcon icon={faPlusCircle} className='icon' />\n        </button>\n      </section>\n    )\n  }\n\n  const workSection = (\n    workArray.map((item) => {\n      if (item === currentWork) {\n        return (\n          // There can only be one form at a time, but I set a key here to avoid the annoying error in the console\n          <WorkForm key={'workForm'}\n          handleSubmit={submitWork} handleChange={handleChange}\n          company={company} title={title} details={details}\n          startDate={startDate} endDate={endDate}\n          handleCancel={() => cancelWork(item)}\n          />\n        )\n      } else {\n        return (\n        <div key={item.id} id={item.id}>\n          <WorkSection\n            company={item.company} title={item.title}\n            details={item.details} startDate={item.startDate}\n            endDate={item.endDate} handleEdit={() => editWork(item)}\n            handleDelete={() => removeWork(item)}\n          />\n        </div>\n        )\n      }\n    })\n  )\n\n  const renderWorkForm = () => {\n    return (\n      <section className=\"Section\">\n        <h2>Work Experience</h2>\n        {workSection}\n        <button onClick={addWork}>\n          Add Experience\n          <FontAwesomeIcon icon={faPlusCircle} className='icon' />  \n        </button>\n      </section>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {renderInfoForm()}\n      {renderSchoolForm()}\n      {renderWorkForm()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}